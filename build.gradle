plugins {
    id "idea"
    id "maven"
    id "jacoco"
    id "maven-publish"
    id "net.ltgt.apt" version "0.15"
    id "com.jfrog.bintray" version "1.8.0"
}

ext {
    versions = [
            lombok          : "1.16.20",
            slf4j           : "1.7.25",
            logback         : "1.2.3",
            jackson         : "2.9.5",
            rome            : "1.9.0",
            commons_lang3   : "3.7",
            okhttp          : "3.10.0",
            jsoup           : "1.11.3",
            codacy          : "4.0.0",
            mockito         : "2.18.3",
            junit           : "4.12"
    ]
}

allprojects {
    group = 'com.github.stachu540'
    version = '2.1.1-SNAPSHOT'
    description = "Java-Based API Wrapper for Hi-Rez Studios games."

    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "net.ltgt.apt"
    apply plugin: "maven-publish"
    apply plugin: "com.jfrog.bintray"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    archivesBaseName = "HiRezApi-${project.name}"

    ext {
        pomConf = {
            url = "https://stachu540.github.io/HiRezAPI"
            licenses {
                license {
                    name "MIT Licence"
                    url "https://github.com/stachu540/HiRezAPI/blob/master/LICENSE"
                    distribution "repo"
                }
            }
            developers {
                developer {
                    id "stachu540"
                    name "Damian Staszewski"
                }
            }
            scm {
                url "https://github.com/stachu540/HiRezAPI.git"
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['build/generated/source/apt/main', 'src/main/java']
            }
        }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:${versions.slf4j}"
        annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
        compileOnly "org.projectlombok:lombok:${versions.lombok}"

        testCompile "junit:junit:${versions.junit}"
        testCompile "org.mockito:mockito-core:${versions.mockito}"
        testCompile "ch.qos.logback:logback-classic:${versions.logback}"
    }

    javadoc {
        options.encoding = "UTF-8"
    }

    // custom tasks for creating source/javadoc jars
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    publishing {
        publications {
            mainProject(MavenPublication) {
                from project.components.java
                groupId project.group
                artifactId archivesBaseName
                version project.version
                artifact sourcesJar
                artifact javadocJar
                pom.withXml {
                    def root = asNode()
                    root.appendNode("description", project.description)
                    root.appendNode("name", "HiRezAPI")
                    root.appendNode('url', 'https://github.com/stachu540/HiRezAPI')
                    root.children().last() + pomConf
                }
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_API_KEY')
        publications = ['mainProject']
        pkg {
            repo = 'Java'
            name = 'HiRezAPI'
            userOrg = user
            desc = project.description
            websiteUrl = 'https://github.com/stachu540/HiRezAPI'
            vcsUrl = 'https://github.com/stachu540/HiRezAPI.git'
            issueTrackerUrl = 'https://github.com/stachu540/HiRezAPI/issues'
            licenses = ['MIT']
            labels = ['hi-rez', 'api-wrapper', 'smite', 'paladins']
            publicDownloadNumbers = true
            version {
                name = project.version
            }
        }
    }
}

wrapper {
    gradleVersion = "4.10.2"
    distributionType = Wrapper.DistributionType.ALL
}